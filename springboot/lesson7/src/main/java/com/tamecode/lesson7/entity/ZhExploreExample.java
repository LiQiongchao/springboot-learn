package com.tamecode.lesson7.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ZhExploreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public ZhExploreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andExploreNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andExploreNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andExploreNameEqualTo(String value) {
            addCriterion("name =", value, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameNotEqualTo(String value) {
            addCriterion("name <>", value, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameGreaterThan(String value) {
            addCriterion("name >", value, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameLessThan(String value) {
            addCriterion("name <", value, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameLike(String value) {
            addCriterion("name like", value, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameNotLike(String value) {
            addCriterion("name not like", value, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameIn(List<String> values) {
            addCriterion("name in", values, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameNotIn(List<String> values) {
            addCriterion("name not in", values, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "exploreName");
            return (Criteria) this;
        }

        public Criteria andExploreNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "exploreName");
            return (Criteria) this;
        }

        public Criteria andUrlIsNull() {
            addCriterion("url is null");
            return (Criteria) this;
        }

        public Criteria andUrlIsNotNull() {
            addCriterion("url is not null");
            return (Criteria) this;
        }

        public Criteria andUrlEqualTo(String value) {
            addCriterion("url =", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotEqualTo(String value) {
            addCriterion("url <>", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThan(String value) {
            addCriterion("url >", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanOrEqualTo(String value) {
            addCriterion("url >=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThan(String value) {
            addCriterion("url <", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThanOrEqualTo(String value) {
            addCriterion("url <=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLike(String value) {
            addCriterion("url like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotLike(String value) {
            addCriterion("url not like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlIn(List<String> values) {
            addCriterion("url in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotIn(List<String> values) {
            addCriterion("url not in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlBetween(String value1, String value2) {
            addCriterion("url between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotBetween(String value1, String value2) {
            addCriterion("url not between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andDigestIsNull() {
            addCriterion("digest is null");
            return (Criteria) this;
        }

        public Criteria andDigestIsNotNull() {
            addCriterion("digest is not null");
            return (Criteria) this;
        }

        public Criteria andDigestEqualTo(String value) {
            addCriterion("digest =", value, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestNotEqualTo(String value) {
            addCriterion("digest <>", value, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestGreaterThan(String value) {
            addCriterion("digest >", value, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestGreaterThanOrEqualTo(String value) {
            addCriterion("digest >=", value, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestLessThan(String value) {
            addCriterion("digest <", value, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestLessThanOrEqualTo(String value) {
            addCriterion("digest <=", value, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestLike(String value) {
            addCriterion("digest like", value, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestNotLike(String value) {
            addCriterion("digest not like", value, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestIn(List<String> values) {
            addCriterion("digest in", values, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestNotIn(List<String> values) {
            addCriterion("digest not in", values, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestBetween(String value1, String value2) {
            addCriterion("digest between", value1, value2, "digest");
            return (Criteria) this;
        }

        public Criteria andDigestNotBetween(String value1, String value2) {
            addCriterion("digest not between", value1, value2, "digest");
            return (Criteria) this;
        }

        public Criteria andIdateIsNull() {
            addCriterion("idate is null");
            return (Criteria) this;
        }

        public Criteria andIdateIsNotNull() {
            addCriterion("idate is not null");
            return (Criteria) this;
        }

        public Criteria andIdateEqualTo(Date value) {
            addCriterion("idate =", value, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateNotEqualTo(Date value) {
            addCriterion("idate <>", value, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateGreaterThan(Date value) {
            addCriterion("idate >", value, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateGreaterThanOrEqualTo(Date value) {
            addCriterion("idate >=", value, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateLessThan(Date value) {
            addCriterion("idate <", value, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateLessThanOrEqualTo(Date value) {
            addCriterion("idate <=", value, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateIn(List<Date> values) {
            addCriterion("idate in", values, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateNotIn(List<Date> values) {
            addCriterion("idate not in", values, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateBetween(Date value1, Date value2) {
            addCriterion("idate between", value1, value2, "idate");
            return (Criteria) this;
        }

        public Criteria andIdateNotBetween(Date value1, Date value2) {
            addCriterion("idate not between", value1, value2, "idate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zh_explore
     *
     * @mbg.generated do_not_delete_during_merge Sat Aug 15 23:20:55 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table zh_explore
     *
     * @mbg.generated Sat Aug 15 23:20:55 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}